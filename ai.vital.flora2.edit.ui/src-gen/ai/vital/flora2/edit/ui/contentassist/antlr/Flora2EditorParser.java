/*
* generated by Xtext
*/
package ai.vital.flora2.edit.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import ai.vital.flora2.edit.services.Flora2EditorGrammarAccess;

public class Flora2EditorParser extends AbstractContentAssistParser {
	
	@Inject
	private Flora2EditorGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected ai.vital.flora2.edit.ui.contentassist.antlr.internal.InternalFlora2EditorParser createParser() {
		ai.vital.flora2.edit.ui.contentassist.antlr.internal.InternalFlora2EditorParser result = new ai.vital.flora2.edit.ui.contentassist.antlr.internal.InternalFlora2EditorParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getATOMSAccess().getAlternatives(), "rule__ATOMS__Alternatives");
					put(grammarAccess.getNUMBERAccess().getAlternatives_2_1(), "rule__NUMBER__Alternatives_2_1");
					put(grammarAccess.getExpression900fyAccess().getAlternatives(), "rule__Expression900fy__Alternatives");
					put(grammarAccess.getExpression0Access().getAlternatives(), "rule__Expression0__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getNUMBERAccess().getGroup(), "rule__NUMBER__Group__0");
					put(grammarAccess.getNUMBERAccess().getGroup_2(), "rule__NUMBER__Group_2__0");
					put(grammarAccess.getExpression1200xfxAccess().getGroup(), "rule__Expression1200xfx__Group__0");
					put(grammarAccess.getExpression1200xfxAccess().getGroup_1(), "rule__Expression1200xfx__Group_1__0");
					put(grammarAccess.getExpression1200fxAccess().getGroup(), "rule__Expression1200fx__Group__0");
					put(grammarAccess.getExpression1150fxAccess().getGroup(), "rule__Expression1150fx__Group__0");
					put(grammarAccess.getExpression1100xfyAccess().getGroup(), "rule__Expression1100xfy__Group__0");
					put(grammarAccess.getExpression1100xfyAccess().getGroup_1(), "rule__Expression1100xfy__Group_1__0");
					put(grammarAccess.getExpression1050xfyAccess().getGroup(), "rule__Expression1050xfy__Group__0");
					put(grammarAccess.getExpression1050xfyAccess().getGroup_1(), "rule__Expression1050xfy__Group_1__0");
					put(grammarAccess.getExpression1000xfyAccess().getGroup(), "rule__Expression1000xfy__Group__0");
					put(grammarAccess.getExpression1000xfyAccess().getGroup_1(), "rule__Expression1000xfy__Group_1__0");
					put(grammarAccess.getExpression954xfyAccess().getGroup(), "rule__Expression954xfy__Group__0");
					put(grammarAccess.getExpression954xfyAccess().getGroup_1(), "rule__Expression954xfy__Group_1__0");
					put(grammarAccess.getExpression900fyAccess().getGroup_0(), "rule__Expression900fy__Group_0__0");
					put(grammarAccess.getExpression900fxAccess().getGroup(), "rule__Expression900fx__Group__0");
					put(grammarAccess.getExpression700xfxAccess().getGroup(), "rule__Expression700xfx__Group__0");
					put(grammarAccess.getExpression700xfxAccess().getGroup_1(), "rule__Expression700xfx__Group_1__0");
					put(grammarAccess.getExpression600xfyAccess().getGroup(), "rule__Expression600xfy__Group__0");
					put(grammarAccess.getExpression600xfyAccess().getGroup_1(), "rule__Expression600xfy__Group_1__0");
					put(grammarAccess.getExpression500yfxAccess().getGroup(), "rule__Expression500yfx__Group__0");
					put(grammarAccess.getExpression500yfxAccess().getGroup_1(), "rule__Expression500yfx__Group_1__0");
					put(grammarAccess.getExpression500fxAccess().getGroup(), "rule__Expression500fx__Group__0");
					put(grammarAccess.getExpression400yfxAccess().getGroup(), "rule__Expression400yfx__Group__0");
					put(grammarAccess.getExpression400yfxAccess().getGroup_1(), "rule__Expression400yfx__Group_1__0");
					put(grammarAccess.getExpression200xfxAccess().getGroup(), "rule__Expression200xfx__Group__0");
					put(grammarAccess.getExpression200xfxAccess().getGroup_1(), "rule__Expression200xfx__Group_1__0");
					put(grammarAccess.getExpression200xfyAccess().getGroup(), "rule__Expression200xfy__Group__0");
					put(grammarAccess.getExpression200xfyAccess().getGroup_1(), "rule__Expression200xfy__Group_1__0");
					put(grammarAccess.getExpression0Access().getGroup_0(), "rule__Expression0__Group_0__0");
					put(grammarAccess.getExpression0Access().getGroup_0_2(), "rule__Expression0__Group_0_2__0");
					put(grammarAccess.getExpression0Access().getGroup_1(), "rule__Expression0__Group_1__0");
					put(grammarAccess.getExpression0Access().getGroup_2(), "rule__Expression0__Group_2__0");
					put(grammarAccess.getExpression0Access().getGroup_3(), "rule__Expression0__Group_3__0");
					put(grammarAccess.getExpression0Access().getGroup_4(), "rule__Expression0__Group_4__0");
					put(grammarAccess.getExpression0Access().getGroup_4_2(), "rule__Expression0__Group_4_2__0");
					put(grammarAccess.getExpression0Access().getGroup_4_2_1(), "rule__Expression0__Group_4_2_1__0");
					put(grammarAccess.getExpression0Access().getGroup_5(), "rule__Expression0__Group_5__0");
					put(grammarAccess.getModelAccess().getExpsAssignment_0(), "rule__Model__ExpsAssignment_0");
					put(grammarAccess.getExpression1200xfxAccess().getOpAssignment_1_1(), "rule__Expression1200xfx__OpAssignment_1_1");
					put(grammarAccess.getExpression1200xfxAccess().getRightAssignment_1_2(), "rule__Expression1200xfx__RightAssignment_1_2");
					put(grammarAccess.getExpression1200fxAccess().getOpAssignment_0(), "rule__Expression1200fx__OpAssignment_0");
					put(grammarAccess.getExpression1200fxAccess().getRightAssignment_1(), "rule__Expression1200fx__RightAssignment_1");
					put(grammarAccess.getExpression1150fxAccess().getOpAssignment_0(), "rule__Expression1150fx__OpAssignment_0");
					put(grammarAccess.getExpression1150fxAccess().getRightAssignment_1(), "rule__Expression1150fx__RightAssignment_1");
					put(grammarAccess.getExpression1100xfyAccess().getOpAssignment_1_1(), "rule__Expression1100xfy__OpAssignment_1_1");
					put(grammarAccess.getExpression1100xfyAccess().getRightAssignment_1_2(), "rule__Expression1100xfy__RightAssignment_1_2");
					put(grammarAccess.getExpression1050xfyAccess().getOpAssignment_1_1(), "rule__Expression1050xfy__OpAssignment_1_1");
					put(grammarAccess.getExpression1050xfyAccess().getRightAssignment_1_2(), "rule__Expression1050xfy__RightAssignment_1_2");
					put(grammarAccess.getExpression1000xfyAccess().getOpAssignment_1_1(), "rule__Expression1000xfy__OpAssignment_1_1");
					put(grammarAccess.getExpression1000xfyAccess().getRightAssignment_1_2(), "rule__Expression1000xfy__RightAssignment_1_2");
					put(grammarAccess.getExpression954xfyAccess().getOpAssignment_1_1(), "rule__Expression954xfy__OpAssignment_1_1");
					put(grammarAccess.getExpression954xfyAccess().getRightAssignment_1_2(), "rule__Expression954xfy__RightAssignment_1_2");
					put(grammarAccess.getExpression900fyAccess().getOpAssignment_0_0(), "rule__Expression900fy__OpAssignment_0_0");
					put(grammarAccess.getExpression900fyAccess().getRightAssignment_0_1(), "rule__Expression900fy__RightAssignment_0_1");
					put(grammarAccess.getExpression900fyAccess().getRightAssignment_1(), "rule__Expression900fy__RightAssignment_1");
					put(grammarAccess.getExpression900fxAccess().getOpAssignment_0(), "rule__Expression900fx__OpAssignment_0");
					put(grammarAccess.getExpression900fxAccess().getRightAssignment_1(), "rule__Expression900fx__RightAssignment_1");
					put(grammarAccess.getExpression700xfxAccess().getOpAssignment_1_1(), "rule__Expression700xfx__OpAssignment_1_1");
					put(grammarAccess.getExpression700xfxAccess().getRightAssignment_1_2(), "rule__Expression700xfx__RightAssignment_1_2");
					put(grammarAccess.getExpression600xfyAccess().getOpAssignment_1_1(), "rule__Expression600xfy__OpAssignment_1_1");
					put(grammarAccess.getExpression600xfyAccess().getRightAssignment_1_2(), "rule__Expression600xfy__RightAssignment_1_2");
					put(grammarAccess.getExpression500yfxAccess().getOpAssignment_1_1(), "rule__Expression500yfx__OpAssignment_1_1");
					put(grammarAccess.getExpression500yfxAccess().getRightAssignment_1_2(), "rule__Expression500yfx__RightAssignment_1_2");
					put(grammarAccess.getExpression500fxAccess().getOpAssignment_0(), "rule__Expression500fx__OpAssignment_0");
					put(grammarAccess.getExpression500fxAccess().getRightAssignment_1(), "rule__Expression500fx__RightAssignment_1");
					put(grammarAccess.getExpression400yfxAccess().getOpAssignment_1_1(), "rule__Expression400yfx__OpAssignment_1_1");
					put(grammarAccess.getExpression400yfxAccess().getRightAssignment_1_2(), "rule__Expression400yfx__RightAssignment_1_2");
					put(grammarAccess.getExpression200xfxAccess().getOpAssignment_1_1(), "rule__Expression200xfx__OpAssignment_1_1");
					put(grammarAccess.getExpression200xfxAccess().getRightAssignment_1_2(), "rule__Expression200xfx__RightAssignment_1_2");
					put(grammarAccess.getExpression200xfyAccess().getOpAssignment_1_1(), "rule__Expression200xfy__OpAssignment_1_1");
					put(grammarAccess.getExpression200xfyAccess().getRightAssignment_1_2(), "rule__Expression200xfy__RightAssignment_1_2");
					put(grammarAccess.getExpression0Access().getAtomAssignment_0_1(), "rule__Expression0__AtomAssignment_0_1");
					put(grammarAccess.getExpression0Access().getTermsAssignment_0_2_1(), "rule__Expression0__TermsAssignment_0_2_1");
					put(grammarAccess.getExpression0Access().getNameAssignment_1_1(), "rule__Expression0__NameAssignment_1_1");
					put(grammarAccess.getExpression0Access().getValueAssignment_2_1(), "rule__Expression0__ValueAssignment_2_1");
					put(grammarAccess.getExpression0Access().getValueAssignment_3_1(), "rule__Expression0__ValueAssignment_3_1");
					put(grammarAccess.getExpression0Access().getHeadAssignment_4_2_0(), "rule__Expression0__HeadAssignment_4_2_0");
					put(grammarAccess.getExpression0Access().getTailAssignment_4_2_1_1(), "rule__Expression0__TailAssignment_4_2_1_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			ai.vital.flora2.edit.ui.contentassist.antlr.internal.InternalFlora2EditorParser typedParser = (ai.vital.flora2.edit.ui.contentassist.antlr.internal.InternalFlora2EditorParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WHITESPACE", "RULE_SINGLE_LINE_COMMENT" };
	}
	
	public Flora2EditorGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(Flora2EditorGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
